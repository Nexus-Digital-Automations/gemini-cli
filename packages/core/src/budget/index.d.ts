/**
 * @license
 * Copyright 2025 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
/**
 * @fileoverview Budget Infrastructure - Core budget management system
 * Comprehensive budget tracking, analytics, and management for Gemini CLI
 *
 * @author Claude Code - Budget Core Infrastructure Agent
 * @version 1.0.0
 */
export { BudgetTracker, createBudgetTracker } from './budget-tracker.js';
export { BudgetEnforcement, BudgetExceededError, createBudgetEnforcement, isBudgetExceededError, type BudgetWarning, type BudgetEnforcementOptions, } from './budget-enforcement.js';
export { BudgetConfigManager, createBudgetConfigManager, BudgetConfigValidationError, BudgetConfigAccessError, DEFAULT_BUDGET_SETTINGS, } from './config/BudgetConfigManager.js';
export type { BudgetStorage, StorageOperationResult, StorageHealthCheck, StorageMetrics, StorageConfig, ObservableStorage, StorageEvent, StorageEventType, StorageEventListener, StorageFactory, MigratableStorage, StorageMigration, } from './persistence/BudgetStorageInterface.js';
export { FileStorage, createFileStorage } from './persistence/FileStorage.js';
export { CostCalculationEngine, createCostCalculationEngine, type ModelPricing, type CostCalculationResult, type UsageCalculationResult, } from './calculations/CostCalculationEngine.js';
export { BudgetValidator, createBudgetValidator, BudgetConstraintViolation, type ValidationRule, type ValidationContext, type ValidationRuleResult, type ComprehensiveValidationResult, } from './validation/BudgetValidator.js';
export { BudgetEventSystem, getBudgetEventSystem, createBudgetEventSystem, type BudgetEventHandler, type EventSubscriptionOptions, type EventSubscription, type EventStatistics, } from './events/BudgetEventSystem.js';
export { BudgetUtils, formatCurrency, formatLargeNumber, calculatePercentage, formatDuration, calculateUsageStats, projectBudgetUsage, mergeUsageData, validateBudgetSettings, getTimeUntilReset, getEnforcementDescription, getFrequencyDescription, type CurrencyFormatOptions, type TimePeriod, type UsageStatsSummary, type BudgetProjection, } from './utils/BudgetUtils.js';
export { BudgetAccessControl, createBudgetAccessControl, type SecurityAuditEntry, type AccessControlRule, type AccessCondition, type PermissionCheckResult, type SecurityConfig, } from './security/BudgetAccessControl.js';
export { AnalyticsEngine, createAnalyticsEngine, } from './analytics/AnalyticsEngine.js';
export { OptimizationEngine } from './analytics/OptimizationEngine.js';
export { MLBudgetAPI, mlBudgetAPI, mlBudgetHandlers, type ForecastRequest, type ForecastResponse, type OptimizationResponse, type AnomalyDetectionResponse, type ModelMetricsResponse, type UsageStatsResponse, } from './api/ml-budget-api.js';
export { MLBudgetCLI, createMLBudgetCLI, mlBudgetCLI, } from './cli/ml-budget-cli.js';
export { BudgetDashboard, createBudgetDashboard, } from './dashboard/BudgetDashboard.js';
export { RealTimeTracker, createRealTimeTracker, } from './dashboard/RealTimeTracker.js';
export { DashboardFormatter } from './dashboard/DashboardFormatter.js';
export { ChartRenderer, createChartRenderer, } from './dashboard/ChartRenderer.js';
export type { BudgetSettings, BudgetUsageData, TokenUsageData, ModelUsageData, SessionUsageData, HistoricalDataPoint, NotificationSettings, BudgetEnforcementLevel, NotificationFrequency, BudgetCalculationContext, CostCalculationParams, BudgetValidationResult, BudgetEventType, BudgetEvent, EventSeverity, BudgetSecurityContext, BudgetPermission, } from './types.js';
export type { AnalyticsDimension, UsagePattern, OptimizationType, UsageMetrics, FeatureCostAnalysis, OptimizationRecommendation, PatternAnalysis, AnomalyDetection, AnalyticsReport, AnalyticsConfig, } from './analytics/AnalyticsEngine.js';
export type { DashboardConfig, DashboardSections, DashboardData, BudgetAlert, CurrentUsageData, CostProjections, TrendsData, RealTimeData, UsageEvent, UsageEventListener, } from './dashboard/BudgetDashboard.js';
export type { ChartConfig, ChartColors, ChartDataPoint, ChartSeries, } from './dashboard/ChartRenderer.js';
export { AllocationSystem, createAllocationSystem, createAllocationCandidatesFromBudgetData, createRecommendationContext, DEFAULT_ALLOCATION_CONFIG, BaseAllocationAlgorithm, UsageBasedAlgorithm, ROIOptimizedAlgorithm, PriorityBasedAlgorithm, createAllocationAlgorithm, createUsageBasedAlgorithm, createROIOptimizedAlgorithm, createPriorityBasedAlgorithm, getDefaultAlgorithmConfig, validateAlgorithmConfig, getAlgorithmMetrics, compareAlgorithmPerformance, ALGORITHM_REGISTRY, RecommendationEngine, createRecommendationEngine, } from './allocation/index.js';
export type { AllocationPriority, AllocationStrategy, AllocationConstraints, SLARequirements, AllocationCandidate, AllocationRecommendation, AllocationImpact, RiskAssessment, AllocationScenario, ScenarioOutcome, AllocationAlgorithmConfig, AllocationOptimizationResult, AllocationSystemConfig, AllocationSystemHealth, AllocationLogger, AlgorithmComparison, RecommendationEngineConfig, RecommendationContext, RecommendationResult, RecommendationInsights, RecommendationPerformanceMetrics, } from './allocation/index.js';
export { TokenTracker, MetricsCollector, UsageCalculator, BudgetEventManager, QuotaManager, TokenDataAggregator, RealTimeStreamingService, TokenUsageCache, createTokenUsageCache, TokenMonitoringIntegration, TokenTrackingContentGenerator, createTokenMonitoringIntegration, createMonitoringEnabledContentGenerator, MonitoringPresets, MonitoringHealthChecker, MonitoringUtils, CachePriority, CachePresets, CacheKeys, } from './monitoring/index.js';
export type { TokenTrackerConfig, TokenTrackingEvent, RequestTrackingData, TokenUsageStats, MetricsCollectorConfig, MetricsDataPoint, MetricsSummary, AggregatedMetrics, TrendAnalysis, StatisticalAnalysis, EventManagerConfig, EventSubscription, EventFilter, EventRoutingRule, EventHandler, QuotaManagerConfig, QuotaLimit, RateLimitStrategy, TokenBucket, SlidingWindowLimiter, AggregatorConfig, AggregationConfig, TimeWindow, WindowedData, StreamingConfig, StreamSubscription, StreamType, StreamMessage, StreamFilter, CacheEntry, CacheConfig, CacheStats, CacheInvalidationEvent, PrefetchConfig, MonitoringIntegrationConfig, IntegrationStats, ModelPricing, CostBreakdown, UsageCostAnalysis, } from './monitoring/index.js';
export { FeatureCostTracker, createFeatureCostTracker, CostBreakdownAnalyzer, createCostBreakdownAnalyzer, CostAllocationManager, createCostAllocationManager, EfficiencyAnalyzer, createEfficiencyAnalyzer, CostComparator, createCostComparator, CostImpactAssessment, createCostImpactAssessment, CostReportGenerator, createCostReportGenerator, CostModelingEngine, createCostModelingEngine, createComprehensiveCostAnalysisSystem, DEFAULT_COST_ANALYSIS_CONFIG, } from './cost-analysis/index.js';
export type { FeatureCostEntry, FeatureCostConfig, CostAttributionRule, FeatureCostAggregation, CostBreakdownConfig, CostBreakdownEntry, CostBreakdownAnalysis, DimensionBreakdown, BreakdownDimension, TimeSeriesAnalysis, StatisticalSummary, CostDistribution, CostAllocationConfig, AllocationMethod, AllocationTarget, AllocationRule, CostAllocationRule, AllocationResult, AllocationRecommendation, AllocationEfficiencyAnalysis, EfficiencyAnalysisConfig, FeatureEfficiencyMetrics, BusinessValue, ROICalculationParams, EfficiencyBenchmark, OptimizationOpportunity, EfficiencyTrend, CostComparisonConfig, CostComparison, ComparisonMetrics, BenchmarkingAnalysis, ComparisonDimension, StatisticalSignificance, CrossDimensionalAnalysis, ExecutiveSummary, CostImpactConfig, CostImpact, ImpactSeverity, ImpactRecommendation, RiskAssessment, ScenarioImpact, ImpactMetrics, ReportGenerationConfig, ReportFormat, ReportTemplateConfig, CustomReportSection, ReportSectionContent, ChartDataSet, ChartDataPoint, ChartOptions, AxisConfig, CostAnalysisReport, ReportMetadata, CostOptimizationRecommendation, CostTrendAnalysis, SeasonalPattern, CostAnomaly, ForecastData, ForecastPeriod, CostAlert, ComprehensiveCostData, CostModelConfig, CostModelType, ModelParameters, PiecewiseBreakpoint, ModelValidationConfig, ValidationMetric, CostDataPoint, CostPrediction, ModelValidationResult, ModelComparison, ModelRanking, StatisticalTest, CostSensitivityAnalysis, FeatureSensitivity, ScenarioAnalysis, CriticalThreshold, CostAnalysisSystem, } from './cost-analysis/index.js';
